2024-10-20 12:50:52 HV000001: Hibernate Validator 6.2.5.Final
2024-10-20 12:50:52 Starting AuthorControllerTest using Java 1.8.0_202 on IT-AhmedAlsheikh with PID 93908 (started by Ahmed.Elsheikh in D:\intellij\books)
2024-10-20 12:50:52 Running with Spring Boot v2.7.8, Spring v5.3.25
2024-10-20 12:50:52 The following 1 profile is active: "prod"
2024-10-20 12:50:54 Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-20 12:50:54 Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-20 12:50:54 Finished Spring Data repository scanning in 227 ms. Found 3 JPA repository interfaces.
2024-10-20 12:50:57 Tomcat initialized with port(s): 0 (http)
2024-10-20 12:50:57 Initializing ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:50:57 Starting service [Tomcat]
2024-10-20 12:50:57 Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-10-20 12:50:57 Initializing Spring embedded WebApplicationContext
2024-10-20 12:50:57 Root WebApplicationContext: initialization completed in 4533 ms
2024-10-20 12:50:58 HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-20 12:50:58 HHH000412: Hibernate ORM core version 5.6.14.Final
2024-10-20 12:50:58 HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-10-20 12:50:58 HikariPool-1 - Starting...
2024-10-20 12:50:59 HikariPool-1 - Start completed.
2024-10-20 12:50:59 HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-10-20 12:51:00 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-10-20 12:51:00 Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:51:01 spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-20 12:51:02 ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-10-20 12:51:02 26 mappings in 'requestMappingHandlerMapping'
2024-10-20 12:51:03 Patterns [/webjars/**, /**, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-10-20 12:51:03 ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-10-20 12:51:04 Initializing Spring TestDispatcherServlet ''
2024-10-20 12:51:04 Initializing Servlet ''
2024-10-20 12:51:04 Exposing 14 endpoint(s) beneath base path '/actuator'
2024-10-20 12:51:04 Completed initialization in 50 ms
2024-10-20 12:51:04 Starting ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:51:04 Tomcat started on port(s): 9616 (http) with context path ''
2024-10-20 12:51:04 Started AuthorControllerTest in 12.143 seconds (JVM running for 13.652)
2024-10-20 12:51:04 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:51:04 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:51:04 ====> Method Name Is >> {}  List com.spring.repo.BookRepository.findAll()
2024-10-20 12:51:04 Mapped to com.spring.controller.AuthorController#save(AuthorDTO)
2024-10-20 12:51:04 Read "application/json;charset=UTF-8" to []
2024-10-20 12:51:04 Using @ExceptionHandler com.spring.exception.GlobalExceptionHandler#handleException(Exception, WebRequest)
2024-10-20 12:51:04 Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-10-20 12:51:04 Nothing to write: null body
2024-10-20 12:51:04 Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<?> com.spring.controller.AuthorController.save(com.spring.dto.AuthorDTO)]
2024-10-20 12:51:05 Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:51:05 HikariPool-1 - Shutdown initiated...
2024-10-20 12:51:05 HikariPool-1 - Shutdown completed.
2024-10-20 12:52:16 HV000001: Hibernate Validator 6.2.5.Final
2024-10-20 12:52:16 Starting AuthorControllerTest using Java 1.8.0_202 on IT-AhmedAlsheikh with PID 71100 (started by Ahmed.Elsheikh in D:\intellij\books)
2024-10-20 12:52:16 Running with Spring Boot v2.7.8, Spring v5.3.25
2024-10-20 12:52:16 The following 1 profile is active: "prod"
2024-10-20 12:52:18 Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-20 12:52:18 Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-20 12:52:18 Finished Spring Data repository scanning in 178 ms. Found 3 JPA repository interfaces.
2024-10-20 12:52:20 Tomcat initialized with port(s): 0 (http)
2024-10-20 12:52:20 Initializing ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:52:20 Starting service [Tomcat]
2024-10-20 12:52:20 Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-10-20 12:52:20 Initializing Spring embedded WebApplicationContext
2024-10-20 12:52:20 Root WebApplicationContext: initialization completed in 3993 ms
2024-10-20 12:52:22 HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-20 12:52:22 HHH000412: Hibernate ORM core version 5.6.14.Final
2024-10-20 12:52:22 HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-10-20 12:52:22 HikariPool-1 - Starting...
2024-10-20 12:52:23 HikariPool-1 - Start completed.
2024-10-20 12:52:23 HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-10-20 12:52:23 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-10-20 12:52:23 Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:52:25 spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-20 12:52:25 ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-10-20 12:52:25 26 mappings in 'requestMappingHandlerMapping'
2024-10-20 12:52:26 Patterns [/webjars/**, /**, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-10-20 12:52:26 ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-10-20 12:52:27 Initializing Spring TestDispatcherServlet ''
2024-10-20 12:52:27 Initializing Servlet ''
2024-10-20 12:52:27 Exposing 14 endpoint(s) beneath base path '/actuator'
2024-10-20 12:52:27 Completed initialization in 55 ms
2024-10-20 12:52:28 Starting ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:52:28 Tomcat started on port(s): 9665 (http) with context path ''
2024-10-20 12:52:28 Started AuthorControllerTest in 11.66 seconds (JVM running for 13.543)
2024-10-20 12:52:28 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:28 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:28 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 124 ms.
2024-10-20 12:52:28 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 124 ms.
2024-10-20 12:52:33 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:33 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:33 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:33 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:33 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 9 ms.
2024-10-20 12:52:33 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 9 ms.
2024-10-20 12:52:33 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 9 ms.
2024-10-20 12:52:33 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 11 ms.
2024-10-20 12:52:36 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:36 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:36 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:36 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:36 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 12 ms.
2024-10-20 12:52:36 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 16 ms.
2024-10-20 12:52:36 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 17 ms.
2024-10-20 12:52:36 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 19 ms.
2024-10-20 12:52:45 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 5 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 8739 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 14 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 14 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 11 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 12 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 2 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 1 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 4 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 3 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 3 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 4 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 2 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 5 ms.
2024-10-20 12:52:54 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 3 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 4 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 3 ms.
2024-10-20 12:52:54 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 2 ms.
2024-10-20 12:52:57 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:57 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:57 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 2 ms.
2024-10-20 12:52:57 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 2 ms.
2024-10-20 12:52:58 Mapped to com.spring.controller.AuthorController#save(AuthorDTO)
2024-10-20 12:52:58 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:52:58 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:52:58 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 4 ms.
2024-10-20 12:52:58 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 5 ms.
2024-10-20 12:52:58 Read "application/json;charset=UTF-8" to [AuthorDTO(id=0, name=null, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)]
2024-10-20 12:52:58 ====> Method Name Is >> {}  ResponseEntity com.spring.controller.AuthorController.save(AuthorDTO)
2024-10-20 12:52:58 ====> argument >> AuthorDTO(id=0, name=null, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)
2024-10-20 12:52:58 Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json, application/cbor]
2024-10-20 12:52:58 Writing [AuthorDTO(id=0, name=ahmed, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)]
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 8 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 8 ms.
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 9 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 9 ms.
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 9 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 7 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 7 ms.
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 7 ms.
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:11 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 6 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 6 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 5 ms.
2024-10-20 12:53:11 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 5 ms.
2024-10-20 12:53:13 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:13 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:13 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 6 ms.
2024-10-20 12:53:13 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 6 ms.
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 3 ms.
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 979 ms.
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 3 ms.
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 4 ms.
2024-10-20 12:53:20 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 2 ms.
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 2 ms.
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 2 ms.
2024-10-20 12:53:20 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 2 ms.
2024-10-20 12:53:21 Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:53:21 HikariPool-1 - Shutdown initiated...
2024-10-20 12:53:21 HikariPool-1 - Shutdown completed.
2024-10-20 12:53:35 HV000001: Hibernate Validator 6.2.5.Final
2024-10-20 12:53:35 Starting AuthorControllerTest using Java 1.8.0_202 on IT-AhmedAlsheikh with PID 16700 (started by Ahmed.Elsheikh in D:\intellij\books)
2024-10-20 12:53:35 Running with Spring Boot v2.7.8, Spring v5.3.25
2024-10-20 12:53:35 The following 1 profile is active: "prod"
2024-10-20 12:53:36 Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-20 12:53:36 Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-20 12:53:36 Finished Spring Data repository scanning in 172 ms. Found 3 JPA repository interfaces.
2024-10-20 12:53:38 Tomcat initialized with port(s): 0 (http)
2024-10-20 12:53:38 Initializing ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:53:38 Starting service [Tomcat]
2024-10-20 12:53:38 Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-10-20 12:53:38 Initializing Spring embedded WebApplicationContext
2024-10-20 12:53:38 Root WebApplicationContext: initialization completed in 3311 ms
2024-10-20 12:53:39 HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-20 12:53:39 HHH000412: Hibernate ORM core version 5.6.14.Final
2024-10-20 12:53:40 HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-10-20 12:53:40 HikariPool-1 - Starting...
2024-10-20 12:53:40 HikariPool-1 - Start completed.
2024-10-20 12:53:40 HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-10-20 12:53:41 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-10-20 12:53:41 Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:53:42 spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-20 12:53:43 ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-10-20 12:53:43 26 mappings in 'requestMappingHandlerMapping'
2024-10-20 12:53:43 Patterns [/webjars/**, /**, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-10-20 12:53:44 ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-10-20 12:53:44 Initializing Spring TestDispatcherServlet ''
2024-10-20 12:53:44 Initializing Servlet ''
2024-10-20 12:53:44 Exposing 14 endpoint(s) beneath base path '/actuator'
2024-10-20 12:53:45 Completed initialization in 48 ms
2024-10-20 12:53:45 Starting ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:53:45 Tomcat started on port(s): 9693 (http) with context path ''
2024-10-20 12:53:45 Started AuthorControllerTest in 10.192 seconds (JVM running for 11.555)
2024-10-20 12:53:45 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:53:45 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:53:45 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 107 ms.
2024-10-20 12:53:45 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 107 ms.
2024-10-20 12:53:45 Mapped to com.spring.controller.AuthorController#save(AuthorDTO)
2024-10-20 12:53:45 Read "application/json;charset=UTF-8" to [AuthorDTO(id=0, name=null, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)]
2024-10-20 12:53:45 ====> Method Name Is >> {}  ResponseEntity com.spring.controller.AuthorController.save(AuthorDTO)
2024-10-20 12:53:45 ====> argument >> AuthorDTO(id=0, name=null, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)
2024-10-20 12:53:45 Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json, application/cbor]
2024-10-20 12:53:45 Writing [AuthorDTO(id=0, name=ahmed, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)]
2024-10-20 12:53:46 Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:53:46 HikariPool-1 - Shutdown initiated...
2024-10-20 12:53:46 HikariPool-1 - Shutdown completed.
2024-10-20 12:53:57 HV000001: Hibernate Validator 6.2.5.Final
2024-10-20 12:53:58 Starting AuthorControllerTest using Java 1.8.0_202 on IT-AhmedAlsheikh with PID 11452 (started by Ahmed.Elsheikh in D:\intellij\books)
2024-10-20 12:53:58 Running with Spring Boot v2.7.8, Spring v5.3.25
2024-10-20 12:53:58 The following 1 profile is active: "prod"
2024-10-20 12:53:59 Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-20 12:53:59 Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-20 12:53:59 Finished Spring Data repository scanning in 205 ms. Found 3 JPA repository interfaces.
2024-10-20 12:54:02 Tomcat initialized with port(s): 0 (http)
2024-10-20 12:54:02 Initializing ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:54:02 Starting service [Tomcat]
2024-10-20 12:54:02 Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-10-20 12:54:02 Initializing Spring embedded WebApplicationContext
2024-10-20 12:54:02 Root WebApplicationContext: initialization completed in 4318 ms
2024-10-20 12:54:03 HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-20 12:54:03 HHH000412: Hibernate ORM core version 5.6.14.Final
2024-10-20 12:54:03 HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-10-20 12:54:03 HikariPool-1 - Starting...
2024-10-20 12:54:04 HikariPool-1 - Start completed.
2024-10-20 12:54:04 HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-10-20 12:54:05 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-10-20 12:54:05 Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:54:07 spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-20 12:54:07 ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-10-20 12:54:08 26 mappings in 'requestMappingHandlerMapping'
2024-10-20 12:54:08 Patterns [/webjars/**, /**, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-10-20 12:54:08 ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-10-20 12:54:10 Initializing Spring TestDispatcherServlet ''
2024-10-20 12:54:10 Initializing Servlet ''
2024-10-20 12:54:10 Exposing 14 endpoint(s) beneath base path '/actuator'
2024-10-20 12:54:10 Completed initialization in 56 ms
2024-10-20 12:54:10 Starting ProtocolHandler ["http-nio-auto-1"]
2024-10-20 12:54:10 Tomcat started on port(s): 9722 (http) with context path ''
2024-10-20 12:54:10 Started AuthorControllerTest in 12.85 seconds (JVM running for 14.452)
2024-10-20 12:54:10 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computePrice()
2024-10-20 12:54:10 ====> Method Name Is >> {}  void com.spring.service.PriceSchedule.computeDiscount()
2024-10-20 12:54:10 ====> Method Name Is >> {}  List com.spring.repo.BookRepository.findAll()
2024-10-20 12:54:10 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computeDiscount()	withArgs: ()	took: 122 ms.
2024-10-20 12:54:10 KPI:[method-execution]	for: void com.spring.service.PriceSchedule.computePrice()	withArgs: ()	took: 122 ms.
2024-10-20 12:54:10 Mapped to com.spring.controller.AuthorController#save(AuthorDTO)
2024-10-20 12:54:10 Read "application/json;charset=UTF-8" to [AuthorDTO(id=0, name=null, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)]
2024-10-20 12:54:10 ====> Method Name Is >> {}  ResponseEntity com.spring.controller.AuthorController.save(AuthorDTO)
2024-10-20 12:54:10 ====> argument >> AuthorDTO(id=0, name=null, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)
2024-10-20 12:54:10 Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json, application/cbor]
2024-10-20 12:54:10 Writing [AuthorDTO(id=0, name=ahmed, ipAddress=192.168.1.1, email=a@a.com, bookCount=1, imagePath=null)]
2024-10-20 12:54:11 Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-20 12:54:11 HikariPool-1 - Shutdown initiated...
2024-10-20 12:54:11 HikariPool-1 - Shutdown completed.
